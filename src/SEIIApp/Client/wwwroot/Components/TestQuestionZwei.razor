

<h3>Question</h3>
@{ if (QuizDefinitionDto != null)
    {
        <label>@(QuizDefinitionDto.QuizName)</label>
        <InputCheckbox></InputCheckbox>
        <label>Hi</label>
        foreach (var question in QuizDefinitionDto.Questions)
        {
            <label>@question.QuestionText</label>
            foreach (var answer in question.Answers)
            {
                <label>@answer.AnswerText</label>
            }
        }

    }
}




@code {

    [Parameter]
    public QuestionDefinitionDto QuestionDefinitionDto { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        InitiQuestionDefintionDto();
    }

    private void InitiQuestionDefintionDto()
    {
        if (QuestionDefinitionDto.Answers == null)
            QuestionDefinitionDto.Answers = Array.Empty<AnswerDefinitionDto>();

    }

    private void AddAnswer()
    {
        QuestionDefinitionDto.Answers = QuestionDefinitionDto.Answers.Concat(new AnswerDefinitionDto[] {
            new AnswerDefinitionDto()
        }).ToArray();
    }

    private void RemoveAnswer(AnswerDefinitionDto answer)
    {
        QuestionDefinitionDto.Answers = QuestionDefinitionDto.Answers.Where(a => a != answer).ToArray();
    }

    @code {
        private List<ConcreteAnswerDto> Answers { get; set; } = new List<ConcreteAnswerDto>();

        [Parameter]
        public QuizDefinitionDto QuizDefinitionDto { get; set; }

        public void Auswerten()
        {
            int correctAnswers = 0;
            int falseAnswers = 0;
            foreach (var a in Answers)
            {
                if (a.ReferencesTo.IsCorrectAnswer && a.SelectedAnswer)
                {
                    correctAnswers++;
                }

                if(a.ReferencesTo.IsCorrectAnswer==false && a.SelectedAnswer)
                {
                    falseAnswers++;
                }
                if(a.ReferencesTo.IsCorrectAnswer && a.SelectedAnswer == false)
                {
                    falseAnswers++;
                }
            }
        }
    }


}
