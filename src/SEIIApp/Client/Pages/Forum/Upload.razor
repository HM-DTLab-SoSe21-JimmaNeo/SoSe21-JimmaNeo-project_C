@page "/upload"

@using SEIIApp.Shared
@inject IJSRuntime jsRunTime
@inject NavigationManager NavigationManager
@inject SEIIApp.Client.Services.PostServiceAccess PostServiceAccess
@using BlazorInputFile

<style>
    #navigation a {
        padding: 8px;
    }
</style>

<div id="navigation">
    <a href="ForumMainPage">Forum</a>
    <a href="post">Posts</a>
    <a href="TopFive">Top5</a>
    <h1>Your Uploads</h1>
</div>

<div style="float:left;margin-right:5px;">
    <label>Title</label>
    <input type="text" @bind="@currentPost.Title" />
    <label>Category</label>
    <input type="text" @bind="@currentPost.Category" />
 
</div>

<button class="btn btn-success" style="float:left;margin-right:5px;" @onclick="SavePost">Save</button>
<button class="btn btn-primary" style="float:left;" @onclick="AddNew">Add New</button>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Upload Date</th>
        </tr>
    </thead>
</table>
<div>
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Title</th>
                <th>UploadDate</th>
                <th>Category</th>
                <th>Upload PDF</th>
                <th>See Post</th>
            </tr>
        </thead>
        <tbody>
            

            @if (posts != null)
            {
                @foreach (PostDto post in posts)
                {
                    <tr>
                        <td>@post.Title</td>
                        <td>@post.UploadDate</td>
                        <td>@post.Category</td>
                        <td>
                            <BlazorInputFile.InputFile OnChange="@(e => HandleFileSelected(e, post.PostId))" />
                        </td>
                        <td>
                            @if (post.Attachment != null)
                            {
                                <button class="btn btn-primary" @onclick="@(e => DownloadPdf(@post.PostId))">Download PDF</button>
                                <button class="btn btn-danger" @onclick="@(e => DeletePdf(@post.PostId))">Delete PDF</button>
                            }
                        </td>

                    </tr>
                }
            }
        </tbody>
    </table>

</div>

@code {


    public PostDto[] posts { get; set; }

    public PostDto currentPost = new PostDto();

    IFileListEntry file;

    public int currentuserId = 12;



    protected override async Task OnInitializedAsync()
    {
        await base.OnParametersSetAsync();
        var ps = await PostServiceAccess.GetAllPosts();
        posts = ps.Where(post => post.UserId == currentuserId).ToArray();
    }

    private void AddNew()
    {
        currentPost = new PostDto();
    }

    private async void SavePost()
    {

        if (currentPost != null)
        {
            currentPost.UserId = currentuserId;
            currentPost.UploadDate = DateTime.Now;
            currentPost.PostId = PostDto.inkrementPostId++;
            await PostServiceAccess.Save(currentPost);
            GetAllMyPosts();
        }
    }



    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        GetAllMyPosts();

    }

    private async void GetAllMyPosts()
    {

        var ps = await PostServiceAccess.GetAllPosts();
        posts = ps.Where(post => post.UserId == currentuserId).ToArray();
    }


    public async void HandleFileSelected(IFileListEntry[] files, int invoiceId)
    {
        var attch = await FileSender(files.FirstOrDefault());
        currentPost.Attachment = attch;
        SavePost();
        GetAllMyPosts();
    }


    public async Task<byte[]> FileSender(IFileListEntry file)
    {
        using (var ms = new System.IO.MemoryStream())
        {
            await file.Data.CopyToAsync(ms);
            return ms.ToArray();
        }
    }

    private void DeletePdf(int postId)
    {
        PostServiceAccess.DeletePdf(postId);
    }

    private void DownloadPdf(int postId)
    {
        var p = posts.FirstOrDefault(x => x.PostId == postId);
        jsRunTime.InvokeVoidAsync("saveAsFile", "PdfFileName1", p.Attachment);

    }

}



