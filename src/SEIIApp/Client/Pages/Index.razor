@page "/"
@using SEIIApp.Shared.ContentDto
@using SEIIApp.Client.Shared.Components
@using SEIIApp.Shared.Moduldto
@using Blazored.Typeahead

<div class="searchbarContainer" style="padding: 30px; height: auto; width: 400px ">
    <BlazoredTypeahead SearchMethod="searchModule" @bind-Value="selectedModule">
        <SelectedTemplate>
            @context.Title
        </SelectedTemplate>
        <ResultTemplate>
            @context.Title
        </ResultTemplate>
    </BlazoredTypeahead>
</div>
<h2 style="margin-bottom: 80px; margin-top: 30px">News</h2>
<News Content="Paper"></News>
<div style="margin-bottom: 120px"></div>
<h2 style="margin-bottom: 30px; margin-top: 50px">Your List</h2>
<ContentPreviewBar RowCount="1"/>
<h2 style="margin-bottom: 30px; margin-top: 50px">Recomendations</h2>
<ContentPreviewBar RowCount="3"/>

@code{
    public ContentPreview ContentPreview = new ContentPreview();
    public Paper Paper = new Paper("Test");
    
    private List<ModulDto> modules = new List<ModulDto>()
    
    
    {
        new ModulDto("Der OP"),
        new ModulDto("Neonatologie"),
        new ModulDto("Diagnose"),
        new ModulDto("Notaufnahme"),
        new ModulDto("Die Basics"),
        new ModulDto("Herzrythmusstörung"),
        new ModulDto("Ultraschall"),
        new ModulDto("Computertomographie"),
        new ModulDto("Frühgeborenen"),
        new ModulDto("EKG"),
        new ModulDto("Sauerstoffsättigung"),
        new ModulDto("Schwangerschaft"),
        new ModulDto("Perinatalzentrum"),
        new ModulDto("Präeklampsie"),
        new ModulDto("HELLP-Syndrom"),
        new ModulDto("Eklampsie"),
        new ModulDto("Präeklampsie"),
        new ModulDto("Säuglings"),
        new ModulDto("Neugeborene"),
        new ModulDto("Blasensprung"),
        new ModulDto("Wehen"),
        new ModulDto("Anämien"),
        new ModulDto("Zöliakie"),
        
        
    };

    private ModulDto selectedModule;

    protected override void OnInitialized()
    {
    //TODO get List of all modules
    }

    private async Task<IEnumerable<ModulDto>> searchModule(string searchText)
    {
        return await Task.FromResult(modules.Where(x => x.Title.ToLower().Contains(searchText.ToLower())).ToList());
    }
}